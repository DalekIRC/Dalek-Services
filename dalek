#!/bin/bash

## Thanks to Wakkymike for help ;)
TERMINAL=$(tty)

# Duplicate (make a backup copy of) file descriptor 1 
# on descriptor 3
exec 3>&1
print_dalek()
{
	echo "██████╗░░█████╗░██╗░░░░░███████╗██╗░░██╗  ██╗██████╗░░█████╗░"
	echo "██╔══██╗██╔══██╗██║░░░░░██╔════╝██║░██╔╝  ██║██╔══██╗██╔══██╗"
	echo "██║░░██║███████║██║░░░░░█████╗░░█████═╝░  ██║██████╔╝██║░░╚═╝"
	echo "██║░░██║██╔══██║██║░░░░░██╔══╝░░██╔═██╗░  ██║██╔══██╗██║░░██╗"
	echo "██████╔╝██║░░██║███████╗███████╗██║░╚██╗  ██║██║░░██║╚█████╔╝"
	echo "╚═════╝░╚═╝░░╚═╝╚══════╝╚══════╝╚═╝░░╚═╝  ╚═╝╚═╝░░╚═╝░╚════╝░"
	php scripts/authors
}
dalek_module_install()
{
	FILE=${1}.php
	rm -rf Dalek-Contrib/
	git clone https://github.com/DalekIRC/Dalek-Contrib
	cd Dalek-Contrib
	if [ -f "$FILE" ] ; then
		mv $FILE ../src/modules/third/
		cd ..
		./dalek module load third/$1
	else
		echo "Could not find module $1"
	fi
	rm -rf Dalek-Contrib/

}

dalek_start()
{

	echo "Dalek IRC Services is booting"
	screen -S dalek-serv -d -m php src/dalek
	echo "Launching services...";
	if screen -list | grep dalek-serv ; then
		echo "Launched!"
		echo "Connecting..."
		dalek_rpc_server
	else
		echo "Failed"
		dalek_stop
	fi
}

dalek_stop()
{
	echo "Dalek IRC Services is stopping..."
	screen -ls | grep dalek-serv | cut -d. -f1 | awk '{print $1}' | xargs kill 
	screen -ls | grep dalek-rpc-serv | cut -d. -f1 | awk '{print $1}' | xargs kill
	echo "Stopped"
}

dalek_rpc_server()
{
	echo "Booting RPC Server on 127.0.0.1:1024"
	screen -S dalek-rpc-serv -d -m php -S 127.0.0.1:1024 -t src/RPC/
	if screen -ls | grep dalek-rpc-serv ; then
		echo "RPC Server online"
	else
		echo "Failed"
		dalek_stop
	fi
}
dalek_restart()
{
	echo "Dalek IRC Services is restarting..."
	dalek_stop
	dalek_start
}

dalek_help_display()
{
	echo "-----oOo----- DALEK HELP ----oOo----"
	echo " "
	echo "dalek start		Starts Dalek Services and RPC WebServer"
	echo "dalek stop		Stops Dalek Services and RPC WebServer"
	echo "dalek restart		Restarts Dalek Services and RPC WebServer"
	echo "dalek genconf		Generates an UnrealIRCd link block for unrealircd.conf"
	echo "dalek module		Parameters: ./dalek module <list|load|unload> [<module>]"
	echo "dalek help		Shows this list"
	echo "-----oOo---------oOo---------oOo----"
	echo " "
	echo "----oOo---- Did you know ----oOo----"
	echo "Did you know?"
	echo "./dalek works better with dialog installed!"
	echo "Install dialog using your package manager and run ./dalek to try out the good interface!"
	echo "***************************"
	
}

if [ $# -eq 0 ] ; then
	if ! which dialog ; then
		dalek_help_display
	else
		./scripts/gui --interface
	fi
elif [ "$1" = "help" ] ; then
	dalek_help_display

elif [ "$1" = "start" ] ; then
	print_dalek
	dalek_start

elif [ "$1" = "restart" ] ; then
	dalek_restart

elif [ "$1" = "stop" ] ; then
	dalek_stop
	
elif [ "$1" = "genconf" ] ; then
	php scripts/genlinkblock

elif [ "$1" = "rehash" ] ; then
	curl -s --insecure -X POST -d '{"jsonrpc": "2.0", "method": "rehash", "params": {"server": "services.valware.uk"}, "id": 123}' http://localhost:1024/api >> /dev/null
	echo "Sent signal to REHASH"
elif [ "$1" = "config" ] ; then
	./scripts/config_script
	
elif [ "$1" = "module" ] ; then
	
	if [ "$2" = "list" ] ; then
		php scripts/module_manager list ${3}
	
	elif [ "$2" = "load" ] ; then
		if [ "$3" ] ; then
			php scripts/module_manager load ${3}
		else
			echo "`./dalek module load`: No module specified"
		fi
	elif [ "$2" = "unload" ] ; then
		if [ "$3" ] ; then
			php scripts/module_manager unload ${3}
		else
			echo "`./dalek module unload`: No module specified"
		fi
	elif [ "$2" = "install" ] ; then
		dalek_module_install $3

	elif [ "$2" = "install-with-gui" ] ; then
		HEIGHT=15
		WIDTH=80
		CHOICE_HEIGHT=8
		BACKTITLE="🚨 DALEKS REIGN SUPREME 🚨"
		TITLE="⚠️ CONFIRM YOUR DECISION"
		
		CHOICE=$(dialog --backtitle "$BACKTITLE" \
						--title "$TITLE" \
						--yesno "Are you sure you want to install ${3}?" $HEIGHT $WIDTH \
						3>&1 1>&2 2>&3)
		if [ "$?" -eq 0 ] ; then
			./dalek module install $3
			if [ -f "src/modules/third/${3}.php" ] ; then
				./scripts/gui --loaded-successful-dialog $3
			else
				./scripts/gui --loaded-unsuccessful-dialog $3
			fi
		else
			./scripts/gui --aborted-dialog
		fi
	fi


else
	echo "[ERROR] ./dalek expects at least one parameter:"
	dalek_help_display
fi

